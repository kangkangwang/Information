@model DeerInformation.Areas.user.Models.DailyWorkReportModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();
}

@section headtag
{<style>
     .search-item {
         font-size: 12px;
     }

     .search-item {
        font: normal 11px tahoma, arial, helvetica, sans-serif;
        padding: 3px 10px 3px 10px;
        border: 1px solid #fff;
        border-bottom: 1px solid #eeeeee;
        white-space: normal;
        color: #555;
    }

        .search-item h3 {
            display: block;
            font: inherit;
            font-weight: bold;
            color: #222;
            margin: 0px;
        }

            .search-item h3 span {
                float: right;
                font-weight: normal;
                margin: 0 0 5px 5px;
                width: 100px;
                display: block;
                clear: none;
            }

    p {
        width: 650px;
    }

    .ext-ie .x-form-text {
        position: static !important;
    }
 </style>

    <script>
        var selectId = function (combo, record, index) {
            var namefield = Ext.getCmp(combo.id.replace('Id', 'Name'));
            namefield.setValue(record[0].data.Name);
            if (record[0].data.ID == 'T_Employee') {
                namefield.setEditable(true);
            } else {
                namefield.setEditable(false);
            }

        }
        var set = function (com) {
            dwr.user._SetPoInfo(com.getValue());
        };
    </script>
}

@section content
{
    @{
        var store = Html.X().Store().ID("CheckerStore")
            .AutoLoad(false)
            .Proxy(Html.X().AjaxProxy()
                .Url(Url.Action("GetEmployee"))
                .ActionMethods(am => am.Read = HttpMethod.POST)
                .Reader(Html.X().JsonReader().RootProperty("data"))
            ).Model(Html.X().Model()
                .Fields(
                    Html.X().ModelField().Name("Name"),
                    Html.X().ModelField().Name("ID")
                )
            );

    var content =
            X.FormPanel()
            .ID("form1")
            .Layout(LayoutType.Column)
            .BodyPadding(10)
            .Frame(true)
            .FieldDefaults(l => { l.LabelWidth = 70; l.LabelAlign = LabelAlign.Right; })
            .Items(
            X.Container().ColumnWidth(1).Layout(LayoutType.Form).Items(
                          // X.ComboBoxFor(m => m.ProjectID).ID("ProjectID").AllowBlank(false).Editable(true).PageSize(5)
                          // .DisplayField("no")
                          // .ValueField("id")
                          // .EmptyText("请选择...")
                          // .Store(X.Store()
                          // .AutoLoad(true)
                          // .Model(X.Model()
                          // .IDProperty("Id")
                          // .Fields(
                          //    new ModelField("id", ModelFieldType.String) { Mapping = "ID" },
                          //    new ModelField("no", ModelFieldType.String) { Mapping = "ProjectNo" }
                          // )
                          // )
                          // .Proxy(X.AjaxProxy().Url(Url.Action("GetProject")).Reader(X.JsonReader().RootProperty("data")))
                          // )
                          //.Listeners(l => l.Select.Handler = "set(App.ProjectID);")
                          Html.X().ComboBoxFor(m => m.ProjectID).ID("ProjectID").AllowBlank(false).Editable(true).EmptyText("输入*显示全部")
                .DisplayField("No")
                .ValueField("ID")
                .TypeAhead(false)
                .Width(500)
                .PageSize(10)
                .HideTrigger(true)
                .MinChars(0)
                .TriggerAction(TriggerAction.Query)
                .ListConfig(Html.X().BoundList()
                    .LoadingText("Searching...")
                    .ItemTpl(Html.X().XTemplate()
                        .Html(@<text>
                        <div class="search-item">
                            <h3><span>{Name}</span>{No}</h3>
                            {Site}
                        </div>
                        </text>)
                    )
                )
                .Store(Html.X().Store()
                    .AutoLoad(false)
                    .Proxy(Html.X().AjaxProxy()
                        .Url(Url.Action("GetPlants"))
                        .ActionMethods(am => am.Read = HttpMethod.POST)
                        .Reader(Html.X().JsonReader().RootProperty("data"))
                    )
                    .Model(Html.X().Model()
                        .Fields(
                        Html.X().ModelField().Name("ID"),
                            Html.X().ModelField().Name("No"),
                            Html.X().ModelField().Name("Site"),
                            Html.X().ModelField().Name("Name")
                        )
                    )
                )
                .Listeners(l => l.Select.Handler = "set(App.ProjectID);")
                          ),





            X.Container().ColumnWidth(1).Layout(LayoutType.Form).Items(X.TextFieldFor(m => m.ProjectName).ID("ProjectName").Editable(false)),
            X.Container().ColumnWidth(1).Layout(LayoutType.Form).Items(X.TextFieldFor(m => m.ProjectSite).ID("ProjectSite").Editable(false)),
            X.Container().ColumnWidth(1).Layout(LayoutType.Column).Items(X.Container().ColumnWidth(0.5).Layout(LayoutType.Form).Items(X.DateFieldFor(m => m.Date).Editable(false)),
            X.Container().ColumnWidth(0.5).Layout(LayoutType.Form).Items(X.ComboBoxFor(m => m.CheckFlowId).Editable(false).Items(Model.CheckFlowItems))),
            X.Container().ColumnWidth(1).Layout(LayoutType.Column).Items(
            X.Container().ColumnWidth(0.75).Layout(LayoutType.Form).Items(X.SliderFor(m => m.ProgressPercentage)),
            X.TextField().Name("num").Editable(false).Hidden(true).ID("EmployeeNum").ColumnWidth(0.1).Value(0),
            X.Button().Text("添加员工").Icon(Icon.Add).ColumnWidth(0.15).DirectEvents(l => { l.Click.Action = "AddEmployee"; l.Click.ExtraParams.Add(new Parameter() { Name = "num", Value = "App.EmployeeNum.getValue()", Mode = ParameterMode.Raw }); }),
            X.Button().Text("删除员工").Icon(Icon.Delete).ColumnWidth(0.15).DirectEvents(l => { l.Click.Action = "RemoveEmployee"; l.Click.ExtraParams.Add(new Parameter() { Name = "num", Value = "App.EmployeeNum.getValue()", Mode = ParameterMode.Raw }); })
            ),
            X.TextFieldFor(m => m.ProjectNo).ID("ProjectNo").Hidden(true),
            X.Container().ID("Employees").ColumnWidth(1).Layout(LayoutType.Column)
            .Items(
            X.Container().ColumnWidth(1).Layout(LayoutType.Column)
            .Items(
            X.ComboBox().ID("EmployeeId0").FieldLabel("工号").Name("WorkHourses[0].EmployeeID").ColumnWidth(0.25)
            .TriggerAction(TriggerAction.Query).DisplayField("ID").ValueField("ID").AllowBlank(false).TypeAhead(true).MinChars(0)
                         .ListConfig(X.BoundList().LoadingText("查找中...").ItemTpl(X.XTemplate()
                         .Html(@<text>
                            <div class="search-item">
                                <h5><span>姓名：{Name}</span> 工号：{ID}</h5>
                            </div>
                        </text>))).Store(store).Listeners(l => l.Select.Fn = "selectId")
            ,
            X.TextField().ID("EmployeeName0").FieldLabel("姓名").Name("WorkHourses[0].EmployeeName").ColumnWidth(0.25).Editable(false).AllowBlank(false),
            X.NumberField().FieldLabel("正班工时").AllowBlank(false).Name("WorkHourses[0].DutyHours").ColumnWidth(0.25),
            X.NumberField().FieldLabel("加班工时").AllowBlank(false).Name("WorkHourses[0].ExtraHours").ColumnWidth(0.25)
            )),
            X.Container().ColumnWidth(1).Layout(LayoutType.Form).Items(X.FileUploadField().ID("AnnetPath").Icon(Icon.Attach).Width(260).FieldLabel("附件").Text("选择文件")),
            X.Container().ColumnWidth(1).Layout(LayoutType.Form).Items(X.TextAreaFor(m => m.Remark))
            )
            .Buttons(
            X.Button().Text("关闭").Handler("parent.App.win.close();"),
            X.Button().Text("提交").FormBind(true).ID("Submit").DirectEvents(l =>
            {
                l.Click.Action = "Submit";
                l.Click.Before = @"if (!#{form1}.getForm().isValid()) { return false; }
                            Ext.Msg.wait('正在提交你的申请...', '上传中');";
                l.Click.FormID = "form1";
            })
            );
}

@(X.Viewport().Layout(LayoutType.Border).Items(
        content.Region(Region.Center).AutoScroll(true))
)
}
