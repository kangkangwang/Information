@model DeerInformation.Models.T_GM_PurchaseFixedAsset

@{
    ViewBag.Title = "采购单增加";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();
}

@section headtag{

<script>
    var getGridValueArr = function (gridname,mem) {
        var grid_data = Ext.getStore(gridname);
        var count = grid_data.getCount();
        var arr = new Array(count);
        for (var i = 0 ; i < count ; i++) {
            arr[i] = grid_data.getAt(i).data[mem];
        }
        return arr;
    };

    var Judge = function (gridname) {
        var count = Ext.getStore(gridname).getCount();
        var x = true;
        var y = true;
        if (count == 0) {
            Ext.Msg.alert("温馨提示", "您还没选择任何物料!!");
            return false;
        };

        var arr1 = new Array(count);
        arr1 = getGridValueArr(gridname, "Num2");
        var arr2 = new Array(count);
        arr2 = getGridValueArr(gridname, "Pri");
        for (var i = 0; i < count; i++) {
            if (arr1[i] == null || arr1[i] == "") {
                x = false;
                break;
            }
        };
        for (var i = 0; i < count; i++) {
            if (arr2[i] == null || arr2[i] == "") {
                y = false;
                break;
            }
        };

        if (!x) {
            Ext.Msg.alert("温馨提示", "数量不能为空!!");
            return false;
        };
        if (!y) {
            Ext.Msg.alert("温馨提示", "价格不能为空!!");
            return false;
        };
        if (x && y) {
            parent.App.window3.close();
        };

    };

</script>

<style>
    .search-item {
        font: normal 11px tahoma, arial, helvetica, sans-serif;
        padding: 3px 10px 3px 10px;
        border: 1px solid #fff;
        border-bottom: 1px solid #eeeeee;
        white-space: normal;
        color: #555;
    }
</style>  

}

@section content{

@{
    var store = Html.X().Store().ID("CheckerStore")
                .AutoLoad(false)
                .Proxy(Html.X().AjaxProxy()
                    .Url(Url.Action("GetSupplierID", "Share"))
                    .ActionMethods(am => am.Read = HttpMethod.POST)
                    .Reader(Html.X().JsonReader().RootProperty("data"))
                ).Model(Html.X().Model()
                    .Fields(
                        Html.X().ModelField().Name("Name"),
                        Html.X().ModelField().Name("ID")
                    )
                );
}

  @( X.Viewport().Layout(LayoutType.Auto).ID("BasicForm").Items(

            X.FormPanel().ID("form1").Layout(LayoutType.Auto).DefaultAnchor("100%").AutoScroll(true)
            .Listeners(l => l.ValidityChange.Handler = "#{save}.setDisabled(!valid);").Items(
                X.Container().Layout(LayoutType.HBox).Items(
                             X.Container().Layout(LayoutType.Form).DefaultAnchor("100%").Flex(1).MarginSpec("0 5 0 0").Items(
                                    X.TextFieldFor(m => m.PurchaseFNo).ReadOnly(true).Text("CGF" + new Random().Next(10000).ToString() + DateTime.Now.ToString("yyyyMMddHHmmss")).FieldLabel("采购单号").Flex(2),
                                    X.TextFieldFor(m => m.Remark).FieldLabel("备注").LabelWidth(55),
                                    X.TextFieldFor(m => m.OrderType).FieldLabel("订单类型").ID("ordertype").AllowBlank(false).Flex(2)),

                            X.Container().Layout(LayoutType.Form).DefaultAnchor("100%").Flex(1).MarginSpec("0 5 0 0").Items(
                                    X.ComboBoxFor(m => m.AuditProcess).FieldLabel("审核流程").Items(ViewBag.audit).Editable(false).Flex(2),
                                    X.DateFieldFor(m => m.No_Date).FieldLabel("预交日").AllowBlank(false).Flex(2),
                                    X.ComboBox().FieldLabel("供应商").ID("spid").Flex(2)
                                    .TypeAhead(true).MinChars(0).HideTrigger(true).Name("[0].ID")
                                    .TriggerAction(TriggerAction.Query).DisplayField("Name").ValueField("ID")
                                    .ListConfig(X.BoundList().LoadingText("查找中...").ItemTpl(X.XTemplate()
                                    .Html(@<text>
                                        <div class="search-item">
                                            <h3><span>供应商名称：{Name}</span> 供应商编号：{ID}</h3>
                                        </div>
                                    </text>)))
                                          .Store(store))),

                                          X.FormPanel().ID("bind").Border(false).Layout(LayoutType.HBox).MarginSpec("5 0 5 0").Listeners(l => l.ValidityChange.Handler = "#{selectm}.setDisabled(!valid);").Items(
                                              X.ComboBoxFor(m => m.ApplyNo).Editable(false).ID("smgid").FieldLabel("申请单号").LabelWidth(55).AllowBlank(false).Flex(5).Items(ViewBag.SQM).MarginSpec("0 10 0 5"),
                                              X.Button().Text("查看申请单剩余固定资产").Disabled(true).Icon(Icon.ShapesManySelect).ID("selectm").DirectEvents(de =>
                                              {
                                                  de.Click.Url = Url.Action("TempApply", "Share");
                                                  de.Click.ExtraParams.Add(new Parameter("smgid", "App.smgid.getValue()", ParameterMode.Raw));
                                                  de.Click.ExtraParams.Add(new Parameter("flag", "false", ParameterMode.Value));
                                                  de.Click.Success = "App.selectm.setDisabled(true)";
                                                  de.Click.EventMask.ShowMask = true;
                                                  de.Click.FormID = "bind";
                                              }))
                                      ),

                          X.FormPanel().Layout(LayoutType.Auto).AutoScroll(true).Items(
                               X.GridPanel().ID("GridPanel1").Title("申请单剩余物料")
                               .Store(
                                      X.Store().ID("AppliedMaterial").AutoLoad(false).PageSize(5).Model(
                                          X.Model().IDProperty("MaterialID").Fields(
                                              new ModelField("NO", ModelFieldType.String),
                                              new ModelField("MaterialID", ModelFieldType.String),
                                              new ModelField("MaterialName", ModelFieldType.String),
                                              new ModelField("Num", ModelFieldType.String),
                                              new ModelField("Size", ModelFieldType.String),
                                              new ModelField("Unit", ModelFieldType.String),
                                              new ModelField("Price", ModelFieldType.String))
                                              ).Reader(X.JsonReader().RootProperty("data")))
                                       .ColumnModel(
                                       X.Column()
                                      .Text("申请单号")
                                      .Flex(1)
                                      .DataIndex("NO").Hidden(true),

                                      X.Column()
                                      .Text("物料编号")
                                      .Flex(1)
                                      .DataIndex("MaterialID"),

                                     X.Column()
                                      .Text("物料名称")
                                      .Flex(1)
                                      .DataIndex("MaterialName"),

                                     X.Column().Text("总数量").Flex(1).DataIndex("Num"),

                                     X.Column()
                                      .Text("型号")
                                      .Flex(1)
                                      .DataIndex("Size"),

                                     X.Column()
                                      .Text("单位")
                                      .Flex(1)
                                      .DataIndex("Unit"),

                                     X.Column()
                                      .Text("价格")
                                      .Flex(1)
                                      .DataIndex("Price"),

                                  X.CommandColumn().Flex(1).Commands(Html.X().GridCommand().CommandName("select").Icon(Icon.Add).Text("确认选择"))
                                  .Listeners(l => l.Command.Handler = "App.DeployedMaterial.insert(0,record);")
                                           )
                                                   ),

                          X.FormPanel().Layout(LayoutType.Auto).AutoScroll(true).Items(
                                  X.GridPanel().ID("GridPanel2").Title("配置采购单物料").Store(
                                      X.Store().ID("DeployedMaterial").AutoLoad(false)
                                      .PageSize(10).Model(X.Model().IDProperty("MaterialID").Fields(
                                          new ModelField("NO", ModelFieldType.String),
                                          new ModelField("MaterialID", ModelFieldType.String),
                                          new ModelField("MaterialName", ModelFieldType.String),
                                          new ModelField("Num2", ModelFieldType.String),
                                          new ModelField("Size", ModelFieldType.String),
                                          new ModelField("Unit", ModelFieldType.String),
                                          new ModelField("Price", ModelFieldType.String),
                                           new ModelField("Pri", ModelFieldType.String))
                                          ).Reader(X.JsonReader().RootProperty("data")))
                                   .ColumnModel(
                                          X.Column()
                                      .Text("申请单号")
                                      .Flex(1)
                                      .DataIndex("NO").Hidden(true),

                                      X.Column()
                                      .Text("物料编号")
                                      .Flex(1)
                                      .DataIndex("MaterialID"),

                                      X.Column()
                                      .Text("物料名称")
                                      .Flex(1)
                                      .DataIndex("MaterialName"),

                                      Html.X().ComponentColumn()
                                      .Editor(true)
                                      .DataIndex("Num2")
                                      .Text("请输入申请数量")
                                      .Flex(1)
                                      .Component(X.NumberField().AllowBlank(false).EmptyText("此项为必须填写项")),

                                      X.Column()
                                      .Text("型号")
                                      .Flex(1)
                                      .DataIndex("Size"),

                                      X.Column()
                                      .Text("单位")
                                      .Flex(1)
                                      .DataIndex("Unit"),
                                      
                                      X.Column()
                                      .Text("预算价")
                                      .Flex(1)
                                      .DataIndex("Price"),

                                        X.ComponentColumn()
                                      .Editor(true)
                                      .DataIndex("Pri")
                                      .Text("请输入价格")
                                      .Flex(1)
                                      .Component(X.NumberField().AllowBlank(false).EmptyText("此项为必须填写项")),

                                      X.CommandColumn().Flex(1).Commands(X.GridCommand().CommandName("selected").Icon(Icon.Delete).Text("取消选择"))
                                      .Listeners(l => l.Command.Handler = "App.DeployedMaterial.remove(record);"))
                                      ).Buttons(
                                          X.Button().Icon(Icon.ApplicationGet).ID("save").Text("保存").Disabled(true).Flex(1)
                                          .DirectEvents(de =>
                                          {
                                              de.Click.Url = Url.Action("FAPurchaseSave");
                                              de.Click.ExtraParams.Add(new Parameter("list", "App.DeployedMaterial.collect('MaterialID')", ParameterMode.Raw));
                                              de.Click.ExtraParams.Add(new Parameter("record", "getGridValueArr('DeployedMaterial','Num2')", ParameterMode.Raw));
                                              de.Click.ExtraParams.Add(new Parameter("price", "getGridValueArr('DeployedMaterial','Pri')", ParameterMode.Raw));
                                              de.Click.ExtraParams.Add(new Parameter("spid", "App.spid.getValue()", ParameterMode.Raw));
                                              de.Click.Success = "Judge('DeployedMaterial');";
                                              de.Click.EventMask.ShowMask = true;
                                              de.Click.FormID = "form1";
                                          }),
                                      X.Button().Icon(Icon.ApplicationGet).ID("cancel").Text("取消").Flex(1)
                                          .Listeners(l => { l.Click.Handler = "parent.App.window3.close()"; }))
                                      )
)
}
