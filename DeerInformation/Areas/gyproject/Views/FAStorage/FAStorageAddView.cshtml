@model DeerInformation.Models.T_GM_StorageFixedAsset
@{
    ViewBag.Title = "固定资产入库单";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();
}

@section headtag{

<script>
    var getGridValueArr = function (gridname,mem) {
        var grid_data = Ext.getStore(gridname);
        var count = grid_data.getCount();
        var arr = new Array(count);
        for (var i = 0 ; i < count ; i++) {
            arr[i] = grid_data.getAt(i).data[mem];
        }
        return arr;
    };

    var Judge = function (gridname) {
        var count = Ext.getStore(gridname).getCount();
        var x = true;
        var y = true;
        if (count == 0) {
            Ext.Msg.alert("温馨提示", "您还没选择任何物料!!");
            return false;
        };

        var arr1 = new Array(count);
        arr1 = getGridValueArr(gridname, "Num2");
        var arr2 = new Array(count);
        arr2 = getGridValueArr(gridname, "Price");
        for (var i = 0; i < count; i++) {
            if (arr1[i] == null || arr1[i] == "") {
                x = false;
                break;
            }
        };
        for (var i = 0; i < count; i++) {
            if (arr2[i] == null || arr2[i] == "") {
                y = false;
                break;
            }
        };

        if (!x) {
            Ext.Msg.alert("温馨提示", "数量不能为空!!");
            return false;
        };
        if (!y) {
            Ext.Msg.alert("温馨提示", "价格不能为空!!");
            return false;
        };
        if (x && y) {
            parent.App.window2.close();
        };

    };

</script>    
 
<style>
    .search-item {
        font: normal 11px tahoma, arial, helvetica, sans-serif;
        padding: 3px 10px 3px 10px;
        border: 1px solid #fff;
        border-bottom: 1px solid #eeeeee;
        white-space: normal;
        color: #555;
    }
</style>    
    }

@section content{
@{
    var store = Html.X().Store().ID("CheckerStore")
                .AutoLoad(false)
                .Proxy(Html.X().AjaxProxy()
                    .Url(Url.Action("GetWarehouseID", "Share"))
                    .ActionMethods(am => am.Read = HttpMethod.POST)
                    .Reader(Html.X().JsonReader().RootProperty("data"))
                ).Model(Html.X().Model()
                    .Fields(
                        Html.X().ModelField().Name("Name"),
                        Html.X().ModelField().Name("ID")
                    )
                );
}

    @{
        var Cen = X.FormPanel().ID("form1").Layout(LayoutType.Anchor).AutoScroll(true).Collapsible(true).Title("入库单明细")
             .Listeners(l =>{l.ValidityChange.Handler = "#{add}.setDisabled(!valid);";})
            .Items(
             X.Container().Layout(LayoutType.HBox).MarginSpec("5 10 0 0").Items(
                 X.Label("入库单号:").MarginSpec("10 10 0 10"),
                X.TextFieldFor(m => m.StorageNo).FieldLabel("").Text("SHF" + new Random().Next(10000).ToString() + DateTime.Now.ToString("yyyyMMddHHmmss")).Editable(false).MarginSpec("10 0 0 0").Flex(1),
                 X.Label("仓库:").MarginSpec("10 10 0 10"),
                    X.ComboBox().AllowBlank(false).FieldLabel("").ID("size").Flex(1).MarginSpec("10 10 0 10")
                         .TypeAhead(true).MinChars(0).HideTrigger(true).Name("[0].ID")
                         .TriggerAction(TriggerAction.Query).DisplayField("Name").ValueField("ID")
                         .ListConfig(X.BoundList().LoadingText("查找中...").ItemTpl(X.XTemplate()
                         .Html(@<text>
                            <div class="search-item">
                                <h3><span>仓库名称：{Name}</span> 仓库编号：{ID}</h3>
                            </div>
                        </text>)))
                                 .Store(store)),

             X.Container().Layout(LayoutType.HBox).MarginSpec("10 10 0 0").Items(
                    X.Label("入库类型:").MarginSpec("0 10 0 10"),
                X.TextFieldFor(m => m.StorageType).FieldLabel("").Flex(1).AllowBlank(false),
                    X.Label("审核流程:").MarginSpec("0 10 0 10"),
                    X.ComboBoxFor(m => m.AuditProcess).Items(ViewBag.audit).FieldLabel("").Flex(1).Editable(false).AllowBlank(false)),

    X.FormPanel().Border(false).ID("bind").Layout(LayoutType.HBox).MarginSpec("10 10 10 0").Listeners(l => l.ValidityChange.Handler = "#{selectm}.setDisabled(!valid);").Items(
             X.Label("采购单号:").MarginSpec("0 10 0 10"),
             X.ComboBoxFor(m => m.PFAGID).ID("purchasegid").FieldLabel("").MarginSpec("0 0 0 0").Flex(1).AllowBlank(false).Items(ViewBag.cgm),
             X.Button().ID("selectm").Text("查看采购单剩余物料").Icon(Icon.ShapeSquareSelect).MarginSpec("0 0 0 10")
                            .DirectEvents(de =>
                            {
                                de.Click.Url = Url.Action("TempPurchase","Share");
                                de.Click.ExtraParams.Add(new Parameter("purchasegid", "App.purchasegid.getValue()", ParameterMode.Raw));
                                de.Click.ExtraParams.Add(new Parameter("morfa", "fa", ParameterMode.Value));
                                de.Click.EventMask.ShowMask = true;
                                de.Click.Success = "App.selectm.setDisabled(true)";
                                de.Click.FormID = "bind";
                            }))       
    );
        var change1 = X.FormPanel().Layout(LayoutType.Auto).AutoScroll(true)
                .Items(
                     X.GridPanel()
                     .ID("GridPanel1")
                     .Title("采购单物料")
                     .Store(
                            X.Store().ID("AppliedMaterial").AutoLoad(false)
                            .PageSize(5).Model(X.Model()
                            .IDProperty("MaterialID")
                            .Fields(
                                new ModelField("MaterialID", ModelFieldType.String),
                                new ModelField("MaterialName", ModelFieldType.String),
                                new ModelField("Num", ModelFieldType.String),
                                new ModelField("Size", ModelFieldType.String),
                                new ModelField("Unit", ModelFieldType.String),
                                new ModelField("Price", ModelFieldType.String))
                                ).Reader(X.JsonReader().RootProperty("data"))
                               )
                             .ColumnModel(

                            X.Column()
                            .Text("物料编号")
                            .Flex(1)
                            .DataIndex("MaterialID"),

                           X.Column()
                            .Text("物料名称")
                            .Flex(1)
                            .DataIndex("MaterialName"),

                           X.Column().Text("总数量").Flex(1).DataIndex("Num"),

                           X.Column()
                            .Text("型号")
                            .Flex(1)
                            .DataIndex("Size"),

                           X.Column()
                            .Text("单位")
                            .Flex(1)
                            .DataIndex("Unit"),

                           X.Column()
                            .Text("价格")
                            .Flex(1)
                            .DataIndex("Price"),

                            Html.X().CommandColumn().Flex(1).Commands(
                                        Html.X().GridCommand().CommandName("select").Icon(Icon.Add).Text("确认选择"))
                                        .Listeners(l => l.Command.Handler = "App.DeployedMaterial.insert(0,record);"))
                                         );

        var change2 = X.FormPanel().Layout(LayoutType.Auto).AutoScroll(true)
                            .Items(
                                 X.GridPanel().ID("GridPanel2")
                                 .Title("实际到货物料")
                                 .Store(
                                        X.Store().ID("DeployedMaterial").AutoLoad(false)
                                        .PageSize(10).Model(X.Model()
                                        .IDProperty("MaterialID")
                                        .Fields(
                                            new ModelField("NO", ModelFieldType.String),
                                            new ModelField("MaterialID", ModelFieldType.String),
                                            new ModelField("MaterialName", ModelFieldType.String),
                                            new ModelField("Num2", ModelFieldType.String),
                                            new ModelField("Size", ModelFieldType.String),
                                            new ModelField("Unit", ModelFieldType.String),
                                            new ModelField("Price", ModelFieldType.String))
                                            ).Reader(X.JsonReader().RootProperty("data"))
                                           )
                                         .ColumnModel(
                                         X.Column()
                                        .Text("申请单号")
                                        .Flex(1)
                                        .DataIndex("NO").Hidden(true),

                                        X.Column()
                                        .Text("物料编号")
                                        .Flex(1)
                                        .DataIndex("MaterialID"),

                                       X.Column()
                                        .Text("物料名称")
                                        .Flex(1)
                                        .DataIndex("MaterialName"),

                                        Html.X().ComponentColumn()
                                        .Editor(true)
                                        .DataIndex("Num2")
                                        .Text("请输入申请数量")
                                        .Flex(1)
                                        .Component(X.NumberField().AllowBlank(false).EmptyText("此项为必须填写项")),

                                       X.Column()
                                        .Text("型号")
                                        .Flex(1)
                                        .DataIndex("Size"),

                                       X.Column()
                                        .Text("单位")
                                        .Flex(1)
                                        .DataIndex("Unit"),

                                          X.Column()
                                        .Text("价格")
                                        .Flex(1)
                                        .DataIndex("Price"),

                                      Html.X().CommandColumn().Flex(1).Commands(
                                               Html.X().GridCommand().CommandName("selected").Icon(Icon.Delete).Text("取消选择"))
                                                    .Listeners(l => l.Command.Handler = "App.DeployedMaterial.remove(record);")
                                             ));           

               var cen3=X.Container().Layout(LayoutType.Auto).Items(
                    X.Button().Icon(Icon.ApplicationGet).ID("add").Text("提交").Disabled(true)                   
                                    .DirectEvents(de =>
                                    {
                                        de.Click.Success = "Judge('DeployedMaterial');"; 
                                        de.Click.Url = Url.Action("FAStorageSubmit");
                                        de.Click.ExtraParams.Add(new Parameter("list", "App.DeployedMaterial.collect('MaterialID')", ParameterMode.Raw));
                                        de.Click.ExtraParams.Add(new Parameter("record", "getGridValueArr('DeployedMaterial','Num2')", ParameterMode.Raw));
                                        de.Click.ExtraParams.Add(new Parameter("pri", "getGridValueArr('DeployedMaterial','Price')", ParameterMode.Raw));
                                        de.Click.ExtraParams.Add(new Parameter("wid", "App.size.getValue()", ParameterMode.Raw));
                                        de.Click.EventMask.ShowMask = true;
                                        de.Click.FormID = "form1";     
                                    }),

                                  X.Button().Icon(Icon.ApplicationGet).ID("cancel").Text("取消")
                                          .Listeners(l => { l.Click.Handler = "parent.App.window2.close()"; }));
                                         }
@(X.Viewport().Items(Cen.Region(Region.Center),change1,change2,cen3).Frame(true))

}
