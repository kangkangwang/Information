@model System.Collections.IEnumerable

@{
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();
}

@section headtag{

<script>

    var getGridValueArr = function (gridname, mem) {
        var grid_data = Ext.getStore(gridname);
        var count = grid_data.getCount();
        var arr = new Array(count);
        for (var i = 0 ; i < count ; i++) {
            arr[i] = grid_data.getAt(i).data[mem];
        }
        return arr;
    };

    var Judge = function (gridname) {
        var count = Ext.getStore(gridname).getCount();
        var x = true;
        var y = true;
        if (count == 0) {
            Ext.Msg.alert("温馨提示", "您还没选择任何物料!!");
            return false;
        };

        var arr1 = new Array(count);
        arr1 = getGridValueArr(gridname, "Num");
        var arr2 = new Array(count);
        arr2 = getGridValueArr(gridname, "Price");
        for (var i = 0; i < count; i++) {
            if (arr1[i] == null || arr1[i] == "") {
                x = false;
                break;
            }
        };
        for (var i = 0; i < count; i++) {
            if (arr2[i] == null || arr2[i] == "") {
                y = false;
                break;
            }
        };

        if (!x) {
            Ext.Msg.alert("温馨提示", "数量不能为空!!");
            return false;
        };
        if (!y) {
            Ext.Msg.alert("温馨提示", "价格不能为空!!");
            return false;
        };
        if (x && y) {
            parent.App.window2.close();
        };

    };

</script>

}

@section content{
    @(
        X.Viewport().Layout(LayoutType.Auto).Items(
            X.FormPanel().Layout(LayoutType.Auto).AutoScroll(true).Items(
                                 X.GridPanel().ID("GridPanel1").Title("申请单剩余物料")
                                 .BottomBar(X.PagingToolbar().DisplayInfo(true).DisplayMsg("当前 {0} - {1} 总共： {2}").EmptyMsg("没有数据可以显示").HideRefresh(true)).Store(
                                        X.Store().ID("AppliedMaterial").AutoLoad(false).PageSize(5).Model(
                                            X.Model().IDProperty("MaterialID").Fields(
                                                new ModelField("NO", ModelFieldType.String),
                                                new ModelField("MaterialID", ModelFieldType.String),
                                                new ModelField("MaterialName", ModelFieldType.String),
                                                new ModelField("Num", ModelFieldType.String),
                                                new ModelField("Size", ModelFieldType.String),
                                                new ModelField("Unit", ModelFieldType.String),
                                                new ModelField("Price", ModelFieldType.String))
                                                ).Reader(X.JsonReader().RootProperty("data")))
                                         .ColumnModel(
                                         X.Column()
                                        .Text("申请单号")
                                        .Flex(1)
                                        .DataIndex("NO").Hidden(true),

                                        X.Column()
                                        .Text("物料编号")
                                        .Flex(1)
                                        .DataIndex("MaterialID"),

                                       X.Column()
                                        .Text("物料名称")
                                        .Flex(1)
                                        .DataIndex("MaterialName"),

                                       X.Column().Text("总数量").Flex(1).DataIndex("Num"),

                                       X.Column()
                                        .Text("型号")
                                        .Flex(1)
                                        .DataIndex("Size"),

                                       X.Column()
                                        .Text("单位")
                                        .Flex(1)
                                        .DataIndex("Unit"),

                                       X.Column()
                                        .Text("价格")
                                        .Flex(1)
                                        .DataIndex("Price"),

                                    X.CommandColumn().Flex(1).Commands(X.GridCommand().CommandName("select").Icon(Icon.Add).Text("确认选择"))
                                    .Listeners(l => l.Command.Handler = "App.DeployedMaterial.insert(0,record);"))
                                    ),

                            X.FormPanel().Layout(LayoutType.Auto).AutoScroll(true).Items(
                                    X.GridPanel().ID("GridPanel2").Title("配置采购单物料").Store(
                                        X.Store().ID("DeployedMaterial").AutoLoad(false)
                                        .PageSize(10).Model(X.Model().IDProperty("MaterialID").Fields(
                                            new ModelField("NO", ModelFieldType.String),
                                            new ModelField("MaterialID", ModelFieldType.String),
                                            new ModelField("MaterialName", ModelFieldType.String),
                                            new ModelField("Num2", ModelFieldType.String),
                                            new ModelField("Size", ModelFieldType.String),
                                            new ModelField("Unit", ModelFieldType.String),
                                            new ModelField("Price", ModelFieldType.String),
                                            new ModelField("Pri", ModelFieldType.String))
                                            ).Reader(X.JsonReader().RootProperty("data"))
                                            )
                                            .ColumnModel(
                                            X.Column()
                                        .Text("申请单号")
                                        .Flex(1)
                                        .DataIndex("NO").Hidden(true),

                                        X.Column()
                                        .Text("物料编号")
                                        .Flex(1)
                                        .DataIndex("MaterialID"),

                                        X.Column()
                                        .Text("物料名称")
                                        .Flex(1)
                                        .DataIndex("MaterialName"),

                                        X.ComponentColumn()
                                        .Editor(true)
                                        .DataIndex("Num2")
                                        .Text("请输入申请数量")
                                        .Flex(1)
                                        .Component(X.NumberField().AllowBlank(false).EmptyText("此项为必须填写项")),

                                        X.Column()
                                        .Text("型号")
                                        .Flex(1)
                                        .DataIndex("Size"),

                                        X.Column()
                                        .Text("单位")
                                        .Flex(1)
                                        .DataIndex("Unit"),

                                        X.Column()
                                        .DataIndex("Price")
                                        .Text("预算价")
                                        .Flex(1),

                                        X.ComponentColumn()
                                        .Editor(true).Text("实际价格")
                                        .DataIndex("Pri").Flex(1)
                                        .Component(X.NumberField().AllowBlank(false).EmptyText("价格不能为空")),

                                        X.CommandColumn().Flex(1).Commands(X.GridCommand().CommandName("selected").Icon(Icon.Delete).Text("取消选择"))
                                        .Listeners(l => l.Command.Handler = "App.DeployedMaterial.remove(record);"))
                                        ).Buttons(
                                            X.Button().Icon(Icon.ApplicationGet).ID("save").Text("保存").Disabled(true).Flex(1)
                                            .DirectEvents(de =>
                                            {
                                                de.Click.Url = Url.Action("MPurchaseSave", "MPurchase");
                                                de.Click.ExtraParams.Add(new Parameter("list", "App.DeployedMaterial.collect('MaterialID')", ParameterMode.Raw));
                                                de.Click.ExtraParams.Add(new Parameter("record", "getGridValueArr('DeployedMaterial','Num2')", ParameterMode.Raw));
                                                de.Click.ExtraParams.Add(new Parameter("price", "getGridValueArr('DeployedMaterial','Pri')", ParameterMode.Raw));
                                                de.Click.Success = "Judge('DeployedMaterial');";//"Judge('DeployedMaterial')";
                                                de.Click.EventMask.ShowMask = true;
                                                de.Click.FormID = "form1";
                                            }),
                                        X.Button().Icon(Icon.ApplicationGet).ID("cancel").Text("取消").Flex(1)
                                            .Listeners(l => { l.Click.Handler = "parent.App.window3.close()"; }))
    )
)
   
}

