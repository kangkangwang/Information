@model DeerInformation.Areas.gyproject.Models.IMMaterial
@{
    ViewBag.Title = "Purchase";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();
}

@section headtag
{
    <script>
        var getGrid = function (grid) {
            Ext.USE_NATIVE_JSON = true;

            var result = grid.getStore();

            var datas = new Array();

            for (var i = 0; i < result.getCount() ; i++) {
                datas[i] = Ext.encode(result.getAt(i).data);
            }
            return Ext.encode(datas);
        }

    </script>
}

@section content
{
    @{
        var store = Html.X().Store().ID("ApplyStore")
        .AutoLoad(false)
        .Reader(Html.X().JsonReader().RootProperty("data"))
        .PageSize(10)
        .Model(
            X.Model()
            .IDProperty("MaterialID")
            .Fields(
            new ModelField("MaterialID", ModelFieldType.String),
            new ModelField("MaterialName", ModelFieldType.String),
            new ModelField("Size", ModelFieldType.String),
            new ModelField("Unit", ModelFieldType.String),
            new ModelField("Price", ModelFieldType.String),
            new ModelField("Num", ModelFieldType.Float),
            new ModelField("IMNum", ModelFieldType.Float),
            new ModelField("UIMNum", ModelFieldType.Float),
            new ModelField("ApplyNumber", ModelFieldType.Object)
                    )
            );


        var grid = X.GridPanel()
            .ID("ApplyGrid")
            .Store(store)
            .ColumnModel(
                X.Column()
                    .Text("物资编号")
                    .Width(132)
                    .DataIndex("MaterialID"),

                X.Column()
                    .Text("物资名称")
                    .Flex(1)
                    .DataIndex("MaterialName"),

                X.Column()
                    .Text("型号")
                    .Flex(1)
                    .DataIndex("Size"),

                X.Column()
                    .Text("单位")
                    .Flex(1)
                    .DataIndex("Unit"),

                X.Column()
                    .Text("预算价（元）")
                    .Flex(1)
                    .DataIndex("Price"),

                X.Column()
                    .Text("采购数量")
                    .Flex(1)
                    .DataIndex("Num"),

                X.Column()
                    .Text("已入库数量")
                    .Flex(1)
                    .DataIndex("IMNum"),

                X.Column()
                    .Text("剩余可入库数量")
                    .Flex(1)
                    .DataIndex("UIMNum"),

                X.ComponentColumn()
                    .Editor(true)
                    .DataIndex("ApplyNumber")
                    .Text("请输入申请入库数量")
                    .Width(100)
                    .Component(X.NumberField().MinValue(0)),

                X.CommandColumn()
                    .Text("操作")
                    .Width(100)
                    .Commands(
                        Html.X().GridCommand()
                            .CommandName("Delete")
                            .Icon(Icon.Delete)
                            .Text("删除")
                    ).Listeners(l =>
                    {
                        l.Command.Handler = "App.ApplyStore.remove(record);";
                    })

            )
            .BottomBar(
                Html.X().PagingToolbar()
                    .HideRefresh(true)
                    .DisplayInfo(true)
                    .DisplayMsg("当前 {0} - {1} 总共： {2}")
                    .EmptyMsg("没有数据可以显示")
            );

        var check = X.Container().ColumnWidth(1).Layout(LayoutType.Form).Items(
            X.ComboBoxFor(m => m.CheckFlowId).Items(Model.CheckFlowItems).Editable(false)
            );

        var content =
                    X.FormPanel()
                    .Layout(LayoutType.Column)
                    .BodyPadding(10)
                    .Frame(true)
                    .FieldDefaults(l =>
                    {
                        l.LabelWidth = 70; l.LabelAlign = LabelAlign.Right;
                    })
                    .Items(
                        X.Container().ColumnWidth(1).Layout(LayoutType.HBox).Items(
                        X.Container().Layout(LayoutType.Form).Flex(1).Items(X.ComboBoxFor(m => m.PurchaseMNo).Editable(true).DisplayField("PurchaseMNo").ValueField("PurchaseMNo").MinChars(0).TypeAhead(true).TriggerAction(TriggerAction.Query).ListConfig(X.BoundList().LoadingText("Searching...").ItemTpl(X.XTemplate().Html(@<text>
    <div class="search-item">
        <h3><span>{PurchaseMNo}</span></h3>
    </div>
                    </text>))).Store(Html.X().Store()
                    .AutoLoad(false)
                    .Proxy(Html.X().AjaxProxy()
                        .Url(Url.Action("GetPurchaseMNo"))
                        .ActionMethods(am => am.Read = HttpMethod.POST)
                        .Reader(Html.X().JsonReader().RootProperty("data")))
                        .Model(X.Model().Fields("PurchaseMNo"))
                           )),
                    X.Container().Layout(LayoutType.Form).Flex(1).Items(X.TextField().ID("ProjectName").FieldLabel("项目名称").Editable(false)),
                    X.Container().Layout(LayoutType.Form).Width(75).Items(X.Button().Icon(Icon.ShapeSquareSelect).Text("查询").DirectClickAction("FillDetailByPurchaseNo"))),
                    X.Container().ColumnWidth(0.5).Layout(LayoutType.Form).Items(X.ComboBox().ID("Warehouse").FieldLabel("工地").Editable(false).Items(Model.Warehouse)),
                    X.Container().ColumnWidth(0.5).Layout(LayoutType.Form).Items(X.DateFieldFor(m => m.IMDate)),
                    X.Container().ColumnWidth(1).Layout(LayoutType.Fit).Items(grid),
                    X.Container().ColumnWidth(1).Layout(LayoutType.Fit).Items(check)

                    )
            .Buttons(
            X.Button().Text("关闭").Handler("parent.App.win.close();"),
            X.Button().Text("提交").FormBind(true).ID("Submit").DirectEvents(l =>
            {
                l.Click.Action = "SubmitApply";
                l.Click.ExtraParams.Add(new Parameter() { Name = "store", Value = "getGrid(App.ApplyGrid)", Mode = ParameterMode.Raw });
                l.Click.ExtraParams.Add(X.Parameter().Mode(ParameterMode.Value).Name("action").Value("purchase"));
            })
            );

}

    @(X.Viewport().Layout(LayoutType.Border).AutoRender(true).Items(
        content.Region(Region.Center).AutoScroll(true))
    )

}
